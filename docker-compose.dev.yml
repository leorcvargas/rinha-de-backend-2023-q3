version: "3.5"
services:
  db:
    image: postgres:15
    hostname: db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: rinha
    ports:
      - "5432:5432"
    expose:
      - "5432"
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "1GB"
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./scripts/postgres/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 25s
      retries: 5
    command:
      [
        "postgres",
        "-c",
        "config_file=/docker-entrypoint-initdb.d/postgresql.conf",
      ]

  api1:
    build: .
    restart: always
    hostname: api1
    environment:
      - ENABLE_SONIC_JSON=1
      - DB_HOST=pgb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rinha
      - DB_PORT=6432
      - CPU_PROFILE=/app/prof/cpu-1.prof
      - MEM_PROFILE=/app/prof/mem-1.prof
      - CACHE_HOST=cache
      - CACHE_PORT=6379
      - SERVER_PORT=8080
      - ENABLE_PROFILING=0
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "0.5GB"

  api2:
    build: .
    restart: always
    hostname: api2
    environment:
      - ENABLE_SONIC_JSON=1
      - DB_HOST=pgb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rinha
      - DB_PORT=6432
      - CPU_PROFILE=/app/prof/cpu-1.prof
      - MEM_PROFILE=/app/prof/mem-1.prof
      - CACHE_HOST=cache
      - CACHE_PORT=6379
      - SERVER_PORT=8080
      - ENABLE_PROFILING=0
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "0.5GB"

  nginx:
    image: nginx
    hostname: api
    volumes:
      - ./scripts/nginx/:/etc/nginx/
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "0.5GB"

  pgbouncer:
    container_name: pgbouncer
    hostname: pgb
    image: bitnami/pgbouncer:latest
    ports:
      - "6432:6432"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./pgbouncer.ini:/bitnami/pgbouncer/conf/pgbouncer.ini
      - ./userlist.txt:/etc/pgbouncer/userlist.txt
    environment:
      - PGBOUNCER_DATABASES=*:host=db port=5432
      - POSTGRESQL_HOST=db
      - POSTGRESQL_PASSWORD=postgres
      - PGBOUNCER_LISTEN_PORT=6432
      - PGBOUNCER_LISTEN_ADDR=*
      - PGBOUNCER_ADMIN_USERS=admin
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

volumes:
  postgres-db:

networks:
  default:
    driver: bridge
